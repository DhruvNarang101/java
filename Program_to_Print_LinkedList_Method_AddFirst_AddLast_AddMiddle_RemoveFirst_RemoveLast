public class LinkedList {
    public class Node {
        int data;
        Node next;
        
        public Node (int data){
            this.data = data;
            this.next=null;
        }
    }
    public static Node head;
    public static Node tail;
    public static int size;
    
    public void addFirst (int data){
        Node newNode = new Node(data);
        size++;
        if(head == null){
            head = tail = newNode;
            return;
        }
        newNode.next = head;
        head = newNode;
    }
    
    public void addLast (int data){
        Node newNode = new Node (data);
        size++;
        if(head == null){
            head = tail = newNode;
            return;
        }
        tail.next = newNode;
        tail = newNode;
    }
    
    public void print(){
        if(head==null){
            System.out.println("LINKED LIST IS EMPTY");
            return;
        }
        
        Node temp = head;
        while(temp!=null){
            System.out.print(temp.data+"-> ");
            temp = temp.next;
        }
        System.out.println("null");
    }
    
    public void addMiddle (int idx,int data){
        Node newNode = new Node(data);
        size++;
        Node temp = head;
        int i=0;
        while(i<idx-1){
            temp = temp.next;
            i++;
        }
        newNode.next=temp.next;
        temp.next=newNode;
    }
    
    public int removeFirst (){
        if(size==0){
            System.out.println("LINKED LIST IS EMPTY");
            return Integer.MIN_VALUE;
        }
        else if(size==1){
            int val = head.data;
            tail= head= null;
            size=0;
            return val;
        }
        int val = head.data;
        head = head.next;
        size--;
        return val;
    }
    
    public int removeLast (){
        if(size==0){
            System.out.println("Linked List is empty");
            return Integer.MIN_VALUE;
        }else if(size==1){
            int val = head.data;
            head = tail = null;
            size=0;
            return val;
        }
        
        Node prev = head;
        
        for(int i=1;i<size-1;i++){
            prev = prev.next;
        }
        int val = tail.data;
        prev.next=null;
        size--;
        return val;
    }
    
    public static void main (String args[]){
        LinkedList ll = new LinkedList();
        ll.addFirst(2);
        ll.addFirst(1);
        ll.addLast(3);
        ll.addLast(4);
        ll.addLast(5);
        ll.print();
        ll.addMiddle(2,9);
        ll.print();
        
        System.out.println("SIZE OF THE LL "+ll.size);
        System.out.println(ll.removeFirst());
        ll.print();
        
        System.out.println(ll.removeLast());
        ll.print();
        System.out.println("SIZE OF THE LL "+ll.size);
        
        
    }
}
