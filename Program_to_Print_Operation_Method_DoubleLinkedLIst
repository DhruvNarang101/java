public class DoubleLL {
    
    public class Node {
        int data;
        Node next;
        Node prev;
        
        public Node (int data){
            this.data = data;
            this.next = null;
            this.prev = null;
        }
    }
    
    public static Node head;
    public static Node tail;
    public static int size;
    
    // ADD IN THE DOUBLE LINKED LIST 
    
    public void addFirst (int data){
        Node newNode = new Node(data);
        size++;
        if(head == null){
            head = tail = newNode;
            return;
        }
        
        newNode.next = head;
        head.prev = newNode;
        head = newNode;
    }
    
    // PRINT LINKEDLIST
    
    public void print(){
        
        Node temp = head;
        while(temp!=null){
            System.out.print(temp.data+"<->");
            temp = temp.next;
        }
       System.out.println("null"); 
    }
    
    // REMOVE FIRST 
    public int removeFirst (){
        if(head == null){
            System.out.println("Linked List is empty");
        }
        
        if(size == 1){
            int val = head.data;
            head = tail = null;
            size = 0;
            return val;
        }
        
        int val = head.data;
        head = head.next;
        head.prev = null;
        size--;
        return val;
    }
    
    // ADD LAST 
    
    public void addLast (int data){
        Node newNode = new Node(data);
        size++;
        if(head == null){
            head = tail = newNode;
            return;
        }
        
        tail.next = newNode;
        newNode.prev = tail;
        tail = newNode;
    }
    
    // REMOVE LAST
    
    public int removeLast(){
        if(head == null){
            System.out.println("LinkedList is empty");
        }
        if(size == 1){
         int val = tail.data;
         head = tail = null;
         size = 0;
         return val;
    }
        int val = tail.data;
        tail = tail.prev;
        tail.next = null;
        size--;
        return val;
        }
    
    
    public static void main (String args[]){
        DoubleLL dll = new DoubleLL();
        dll.addFirst(4);
        dll.addFirst(3);
        dll.addFirst(2);
        dll.addFirst(1);
        dll.addFirst(0);
        
        dll.print();
        System.out.println("SIZE = "+size);
        
        dll.removeFirst();
        dll.removeFirst();
        
        dll.print();
        System.out.println("SIZE = "+size);
        
        dll.addLast(5);
         dll.print();
        System.out.println("SIZE = "+size);
        
        dll.removeLast();
        dll.print();
        System.out.println("SIZE = "+size);
        
    }
}
