public class CircularQueueArray {
    static class Queue {
        static int arr[];
        static int size;
        static int front;
        static int rear;

        Queue(int n){ // n is the size of the array
           arr = new int[n];
           size = n;
           front = -1;
           rear = -1; 
        }
         
        // Empty function
        public static boolean isEmpty(){
            return rear == -1 && front == -1;
        }

        // Full Function
        public static boolean isFull(){
            return (rear+1)%size == front;
        }

        // add function
        public static void add(int data){
            if(isFull()) {
                System.out.println("Queue is full");
                return;
            }     
            if(front == -1){
                front =0;
            }
            rear = (rear+1)%size;
            arr[rear]=data;
        }
        
        // Remove Function
        public static int remove(){
            if(isEmpty()){
                System.out.println("Queue is Empty");
                return-1;
            }
            int result = arr[front];
            if(front==rear){
                front = rear = -1;
            }else{
            front= (front+1)%size;
            }
            return result;
        }

        // Peek function
        public static int peek(){
            if(isEmpty()){
                System.out.println("Queue is Empty");
                return -1;
            }
            return arr[front];
        }
    }
    public static void main (String args[]){
        Queue q = new Queue(3);
        q.add(1);
        q.add(2);
        q.add(3);
        System.out.println(q.remove());
        q.add(4);
        System.out.println(q.remove());
        q.add(5);

        while(!q.isEmpty()){
            System.out.println(q.peek());
            q.remove();
        }
    }
}
